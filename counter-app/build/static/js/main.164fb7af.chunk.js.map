{"version":3,"sources":["logo.svg","components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","console","log","className","href","this","props","totalCounters","Component","Counter","prevProps","prevState","getBadgeClasses","formatCount","onClick","onIncrement","counter","onDecrement","onDelete","id","classes","value","Counters","onReset","onAdd","counters","map","App","state","handleIncrement","index","indexOf","setState","handleDelete","counterId","filter","c","handleReset","handleUpdate","handleDecrement","handleAdd","length","push","el","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.164fb7af.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\r\nclass Navbar extends Component {\r\n  render() {\r\n    console.log(\"navbar rendered\");\r\n    return (\r\n      <nav className=\"navbar navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          Navbar{\" \"}\r\n          <span className=\"badge badge-pill badge-secondary\">\r\n            {this.props.totalCounters}\r\n          </span>\r\n        </a>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nclass Counter extends Component {\r\n  // constructor() {\r\n  //   super();\r\n  //   this.handleIncrement = this.handleIncrement.bind(this);\r\n  // }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // console.log(\"prevProps\", prevProps);\r\n    // console.log(\"prevState\", prevState);\r\n  }\r\n  componentWillUnmount() {\r\n    // console.log(\"Counter unmount\");\r\n  }\r\n  render() {\r\n    // console.log(\"counter rendered\");\r\n    return (\r\n      <div>\r\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n        <button\r\n          onClick={() => {\r\n            this.props.onIncrement(this.props.counter);\r\n          }}\r\n          className=\"btn btn-secondary btn-sm\"\r\n        >\r\n          Increment\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            this.props.onDecrement(this.props.counter);\r\n          }}\r\n          className=\"btn btn-secondary btn-sm m-2\"\r\n        >\r\n          Decrement\r\n        </button>\r\n        <button\r\n          onClick={() => this.props.onDelete(this.props.counter.id)}\r\n          className=\"btn btn-danger btn-sm m-2\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  getBadgeClasses() {\r\n    let classes = \"badge m-2 \";\r\n    classes +=\r\n      this.props.counter.value == 0 ? \"badge-warning\" : \"badge-primary\";\r\n    return classes;\r\n  }\r\n\r\n  formatCount() {\r\n    const { value } = this.props.counter;\r\n    return value == 0 ? \"Zero\" : value;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter\";\r\nclass Counters extends Component {\r\n  render() {\r\n    // console.log(\"counters rendered\");\r\n    const { onReset, onAdd, onIncrement, onDecrement, onDelete, counters } =\r\n      this.props;\r\n    return (\r\n      <div>\r\n        <button onClick={onReset} className=\"btn btn-primary btn-sm m-2\">\r\n          Reset\r\n        </button>\r\n        <button onClick={onAdd} className=\"btn btn-primary btn-sm m-2\">\r\n          Add new Counter\r\n        </button>\r\n        {counters.map((counter) => (\r\n          <Counter\r\n            key={counter.id}\r\n            onDelete={onDelete}\r\n            onIncrement={onIncrement}\r\n            counter={counter}\r\n            onDecrement={onDecrement}\r\n          ></Counter>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counters;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/navbar'\nimport Counters from './components/counters';\nimport React, { Component } from \"react\";\n\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 4 },\n      { id: 2, value: 1 },\n      { id: 3, value: 1 },\n      { id: 4, value: 1 },\n    ],\n  };\n  constructor(){\n    super();\n    // console.log('app constructor');\n  }\n  componentDidMount(){\n    // console.log('app mounted')\n  }\n  handleUpdate(counters){\n    \n    counters= counters.filter((el)=>el.value>0)\n    this.setState({ counters });\n\n  }\n  handleIncrement = (counter) => {\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index].value++;\n    this.setState({ counters });\n  };\n  handleDelete = (counterId) => {\n    // console.log(\"event handler called\", counterId);\n    const counters = this.state.counters.filter((c) => c.id != counterId);\n    this.setState({ counters: counters });\n  };\n\n  handleReset = () => {\n    const counters = this.state.counters.map((c) => {\n      c.value = 0;\n      return c;\n    });\n   this.handleUpdate(counters)\n  };\n  handleDecrement =(counter)=>{\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    if(counters[index].value>0)counters[index].value--;\n    this.handleUpdate(counters)\n  }\n  handleAdd = () =>{\n    // console.log(this.state.counters)\n    const counters = [...this.state.counters];\n    if(counters.length>0)\n    counters.push({id: counters[counters.length-1].id+1,\n    value: 1\n  })\n  else counters.push({id:1,\n    value:1})\n    this.setState({counters});\n    // console.log(this.state.counters,counters);\n  }\n  render(){\n    // console.log('app rendered')\n    return (\n      <React.Fragment>\n  \n  \n      <Navbar totalCounters={this.state.counters.filter(c=> c.value>0).length}></Navbar>\n      <main className=\"container\">\n      <Counters \n      counters = {this.state.counters}\n      onReset={this.handleReset}\n      onAdd = {this.handleAdd}\n      onIncrement= {this.handleIncrement}\n      onDecrement={this.handleDecrement}\n      onDelete= {this.handleDelete}/>\n      </main>\n      </React.Fragment>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}